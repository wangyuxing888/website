{"version":3,"sources":["modernizr.js","fastclick.js","sidebar.js","dropdown.js","decode.js"],"names":["window","document","undefined","is","obj","type","testRunner","featureNames","feature","aliasIdx","result","nameIdx","featureName","featureNameSplit","featureIdx","tests","hasOwnProperty","name","push","toLowerCase","options","aliases","length","fn","split","Modernizr","Boolean","classes","join","setClasses","className","docElement","classPrefix","_config","isSVG","baseVal","enableJSClass","reJS","RegExp","replace","enableClasses","createElement","arguments","createElementNS","call","apply","getBody","body","fake","injectElementWithStyles","rule","callback","nodes","testnames","style","ret","node","docOverflow","mod","div","parseInt","id","appendChild","styleSheet","cssText","createTextNode","background","overflow","parentNode","removeChild","offsetHeight","contains","str","substr","indexOf","domToCSS","m1","nativeTestProps","props","value","i","CSS","supports","conditionText","getComputedStyle","position","cssToDOM","m2","toUpperCase","testProps","prefixed","skipValueTest","cleanElems","afterInit","mStyle","modElem","propsLength","prop","before","elems","shift","e","fnBind","that","testDOMProps","elem","item","testPropsAll","ucProp","charAt","slice","cssomPrefixes","testAllProps","ModernizrProto","_version","usePrefixes","_q","on","test","cb","self","this","setTimeout","addTest","addAsyncTest","prototype","documentElement","nodeName","mq","matchMedia","msMatchMedia","mql","matches","bool","currentStyle","addStyleSheet","ownerDocument","p","parent","getElementsByTagName","innerHTML","insertBefore","lastChild","firstChild","getElements","elements","html5","addElements","newElements","shivDocument","getExpandoData","data","expandoData","expando","expanID","supportsUnknownElements","cache","cloneNode","saveClones","createElem","canHaveChildren","reSkip","tagUrn","frag","createDocumentFragment","clone","l","shivMethods","createFrag","Function","shivCSS","supportsHtml5Styles","hasCSS","addWrappers","index","reElements","applyElement","createWrapper","element","attributes","wrapper","shivNamespace","specified","setAttribute","nodeValue","shivCssText","pair","parts","replacement","removeWrappers","wrappers","removeNode","shivPrint","removeSheet","clearTimeout","_removeSheetTimer","shivedSheet","namespaces","ownerWindow","parentWindow","supportsShivableSheets","printShived","add","attachEvent","imports","sheet","collection","styleSheets","sheets","Array","pop","disabled","reMedia","media","er","reverse","version","a","childNodes","docEl","module","exports","omPrefixes","_cssomPrefixes","unshift","domPrefixes","_domPrefixes","navigator","userAgent","SVGRect","namespaceURI","prefixes","_prefixes","testStyles","DocumentTouch","query","offsetTop","FastClick","layer","bind","method","context","oldOnClick","trackingClick","trackingClickStart","targetElement","touchStartX","touchStartY","lastTouchIdentifier","touchBoundary","tapDelay","tapTimeout","notNeeded","methods","deviceIsAndroid","addEventListener","onMouse","onClick","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","Event","stopImmediatePropagation","removeEventListener","capture","rmv","Node","hijacked","adv","event","propagationStopped","onclick","deviceIsWindowsPhone","deviceIsIOS","deviceIsIOS4","deviceIsIOSWithBadTarget","deviceIsBlackBerry10","needsClick","target","needsFocus","readOnly","sendClick","clickEvent","touch","activeElement","blur","changedTouches","createEvent","initMouseEvent","determineEventType","screenX","screenY","clientX","clientY","forwardedTouchEvent","dispatchEvent","tagName","focus","setSelectionRange","updateScrollParent","scrollParent","parentElement","fastClickScrollParent","scrollHeight","fastClickLastScrollTop","scrollTop","getTargetElementFromEventTarget","eventTarget","nodeType","TEXT_NODE","selection","targetTouches","getSelection","rangeCount","isCollapsed","identifier","preventDefault","timeStamp","pageX","pageY","lastClickTime","touchHasMoved","boundary","Math","abs","findControl","labelElement","control","htmlFor","getElementById","querySelector","forElement","targetTagName","cancelNextClick","elementFromPoint","pageXOffset","pageYOffset","top","cancelable","stopPropagation","permitted","detail","destroy","metaViewport","chromeVersion","blackberryVersion","firefoxVersion","ontouchstart","exec","content","scrollWidth","outerWidth","match","msTouchAction","touchAction","attach","define","amd","DecodeSidebar","visibleClass","currentElement","toggleClass","classString","nameIndex","init","DecodeDropdown","parentElements","childElements","activeDropdownClass","OpenMenus","doc","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","openItemSelector","CloseMenus","forEach","querySelectorAll","classList","toggle","remove","decode"],"mappings":"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","file":"decode.js","sourcesContent":["/*!\n * modernizr v3.3.1\n * Build http://modernizr.com/download?-csstransforms-flexbox-inlinesvg-touchevents-mq-printshiv-setclasses-dontmin\n *\n * Copyright (c)\n *  Faruk Ates\n *  Paul Irish\n *  Alex Sexton\n *  Ryan Seddon\n *  Patrick Kettner\n *  Stu Cox\n *  Richard Herrera\n\n * MIT License\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in the\n * current UA and makes the results available to you in two ways: as properties on\n * a global `Modernizr` object, and as classes on the `<html>` element. This\n * information allows you to progressively enhance your pages with a granular level\n * of control over the experience.\n*/\n\n;(function(window, document, undefined){\n  var tests = [];\n  \n\n  /**\n   *\n   * ModernizrProto is the constructor for Modernizr\n   *\n   * @class\n   * @access public\n   */\n\n  var ModernizrProto = {\n    // The current version, dummy\n    _version: '3.3.1',\n\n    // Any settings that don't work as separate modules\n    // can go in here as configuration.\n    _config: {\n      'classPrefix': '',\n      'enableClasses': true,\n      'enableJSClass': true,\n      'usePrefixes': true\n    },\n\n    // Queue of tests\n    _q: [],\n\n    // Stub these for people who are listening\n    on: function(test, cb) {\n      // I don't really think people should do this, but we can\n      // safe guard it a bit.\n      // -- NOTE:: this gets WAY overridden in src/addTest for actual async tests.\n      // This is in case people listen to synchronous tests. I would leave it out,\n      // but the code to *disallow* sync tests in the real version of this\n      // function is actually larger than this.\n      var self = this;\n      setTimeout(function() {\n        cb(self[test]);\n      }, 0);\n    },\n\n    addTest: function(name, fn, options) {\n      tests.push({name: name, fn: fn, options: options});\n    },\n\n    addAsyncTest: function(fn) {\n      tests.push({name: null, fn: fn});\n    }\n  };\n\n  \n\n  // Fake some of Object.create so we can force non test results to be non \"own\" properties.\n  var Modernizr = function() {};\n  Modernizr.prototype = ModernizrProto;\n\n  // Leak modernizr globally when you `require` it rather than force it here.\n  // Overwrite name so constructor name is nicer :D\n  Modernizr = new Modernizr();\n\n  \n\n  var classes = [];\n  \n\n  /**\n   * is returns a boolean if the typeof an obj is exactly type.\n   *\n   * @access private\n   * @function is\n   * @param {*} obj - A thing we want to check the type of\n   * @param {string} type - A string to compare the typeof against\n   * @returns {boolean}\n   */\n\n  function is(obj, type) {\n    return typeof obj === type;\n  }\n  ;\n\n  /**\n   * Run through all tests and detect their support in the current UA.\n   *\n   * @access private\n   */\n\n  function testRunner() {\n    var featureNames;\n    var feature;\n    var aliasIdx;\n    var result;\n    var nameIdx;\n    var featureName;\n    var featureNameSplit;\n\n    for (var featureIdx in tests) {\n      if (tests.hasOwnProperty(featureIdx)) {\n        featureNames = [];\n        feature = tests[featureIdx];\n        // run the test, throw the return value into the Modernizr,\n        // then based on that boolean, define an appropriate className\n        // and push it into an array of classes we'll join later.\n        //\n        // If there is no name, it's an 'async' test that is run,\n        // but not directly added to the object. That should\n        // be done with a post-run addTest call.\n        if (feature.name) {\n          featureNames.push(feature.name.toLowerCase());\n\n          if (feature.options && feature.options.aliases && feature.options.aliases.length) {\n            // Add all the aliases into the names list\n            for (aliasIdx = 0; aliasIdx < feature.options.aliases.length; aliasIdx++) {\n              featureNames.push(feature.options.aliases[aliasIdx].toLowerCase());\n            }\n          }\n        }\n\n        // Run the test, or use the raw value if it's not a function\n        result = is(feature.fn, 'function') ? feature.fn() : feature.fn;\n\n\n        // Set each of the names on the Modernizr object\n        for (nameIdx = 0; nameIdx < featureNames.length; nameIdx++) {\n          featureName = featureNames[nameIdx];\n          // Support dot properties as sub tests. We don't do checking to make sure\n          // that the implied parent tests have been added. You must call them in\n          // order (either in the test, or make the parent test a dependency).\n          //\n          // Cap it to TWO to make the logic simple and because who needs that kind of subtesting\n          // hashtag famous last words\n          featureNameSplit = featureName.split('.');\n\n          if (featureNameSplit.length === 1) {\n            Modernizr[featureNameSplit[0]] = result;\n          } else {\n            // cast to a Boolean, if not one already\n            /* jshint -W053 */\n            if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n              Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n            }\n\n            Modernizr[featureNameSplit[0]][featureNameSplit[1]] = result;\n          }\n\n          classes.push((result ? '' : 'no-') + featureNameSplit.join('-'));\n        }\n      }\n    }\n  }\n  ;\n\n  /**\n   * docElement is a convenience wrapper to grab the root element of the document\n   *\n   * @access private\n   * @returns {HTMLElement|SVGElement} The root element of the document\n   */\n\n  var docElement = document.documentElement;\n  \n\n  /**\n   * A convenience helper to check if the document we are running in is an SVG document\n   *\n   * @access private\n   * @returns {boolean}\n   */\n\n  var isSVG = docElement.nodeName.toLowerCase() === 'svg';\n  \n\n  /**\n   * setClasses takes an array of class names and adds them to the root element\n   *\n   * @access private\n   * @function setClasses\n   * @param {string[]} classes - Array of class names\n   */\n\n  // Pass in an and array of class names, e.g.:\n  //  ['no-webp', 'borderradius', ...]\n  function setClasses(classes) {\n    var className = docElement.className;\n    var classPrefix = Modernizr._config.classPrefix || '';\n\n    if (isSVG) {\n      className = className.baseVal;\n    }\n\n    // Change `no-js` to `js` (independently of the `enableClasses` option)\n    // Handle classPrefix on this too\n    if (Modernizr._config.enableJSClass) {\n      var reJS = new RegExp('(^|\\\\s)' + classPrefix + 'no-js(\\\\s|$)');\n      className = className.replace(reJS, '$1' + classPrefix + 'js$2');\n    }\n\n    if (Modernizr._config.enableClasses) {\n      // Add the new classes\n      className += ' ' + classPrefix + classes.join(' ' + classPrefix);\n      isSVG ? docElement.className.baseVal = className : docElement.className = className;\n    }\n\n  }\n\n  ;\n\n  /**\n   * createElement is a convenience wrapper around document.createElement. Since we\n   * use createElement all over the place, this allows for (slightly) smaller code\n   * as well as abstracting away issues with creating elements in contexts other than\n   * HTML documents (e.g. SVG documents).\n   *\n   * @access private\n   * @function createElement\n   * @returns {HTMLElement|SVGElement} An HTML or SVG element\n   */\n\n  function createElement() {\n    if (typeof document.createElement !== 'function') {\n      // This is the case in IE7, where the type of createElement is \"object\".\n      // For this reason, we cannot call apply() as Object is not a Function.\n      return document.createElement(arguments[0]);\n    } else if (isSVG) {\n      return document.createElementNS.call(document, 'http://www.w3.org/2000/svg', arguments[0]);\n    } else {\n      return document.createElement.apply(document, arguments);\n    }\n  }\n\n  ;\n\n  /**\n   * getBody returns the body of a document, or an element that can stand in for\n   * the body if a real body does not exist\n   *\n   * @access private\n   * @function getBody\n   * @returns {HTMLElement|SVGElement} Returns the real body of a document, or an\n   * artificially created element that stands in for the body\n   */\n\n  function getBody() {\n    // After page load injecting a fake body doesn't work so check if body exists\n    var body = document.body;\n\n    if (!body) {\n      // Can't use the real body create a fake one.\n      body = createElement(isSVG ? 'svg' : 'body');\n      body.fake = true;\n    }\n\n    return body;\n  }\n\n  ;\n\n  /**\n   * injectElementWithStyles injects an element with style element and some CSS rules\n   *\n   * @access private\n   * @function injectElementWithStyles\n   * @param {string} rule - String representing a css rule\n   * @param {function} callback - A function that is used to test the injected element\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\n   * @returns {boolean}\n   */\n\n  function injectElementWithStyles(rule, callback, nodes, testnames) {\n    var mod = 'modernizr';\n    var style;\n    var ret;\n    var node;\n    var docOverflow;\n    var div = createElement('div');\n    var body = getBody();\n\n    if (parseInt(nodes, 10)) {\n      // In order not to give false positives we create a node for each test\n      // This also allows the method to scale for unspecified uses\n      while (nodes--) {\n        node = createElement('div');\n        node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n        div.appendChild(node);\n      }\n    }\n\n    style = createElement('style');\n    style.type = 'text/css';\n    style.id = 's' + mod;\n\n    // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n    // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n    (!body.fake ? div : body).appendChild(style);\n    body.appendChild(div);\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = rule;\n    } else {\n      style.appendChild(document.createTextNode(rule));\n    }\n    div.id = mod;\n\n    if (body.fake) {\n      //avoid crashing IE8, if background image is used\n      body.style.background = '';\n      //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n      body.style.overflow = 'hidden';\n      docOverflow = docElement.style.overflow;\n      docElement.style.overflow = 'hidden';\n      docElement.appendChild(body);\n    }\n\n    ret = callback(div, rule);\n    // If this is done after page load we don't want to remove the body so check if body exists\n    if (body.fake) {\n      body.parentNode.removeChild(body);\n      docElement.style.overflow = docOverflow;\n      // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n      docElement.offsetHeight;\n    } else {\n      div.parentNode.removeChild(div);\n    }\n\n    return !!ret;\n\n  }\n\n  ;\n\n  /**\n   * Modernizr.mq tests a given media query, live against the current state of the window\n   * adapted from matchMedia polyfill by Scott Jehl and Paul Irish\n   * gist.github.com/786768\n   *\n   * @memberof Modernizr\n   * @name Modernizr.mq\n   * @optionName Modernizr.mq()\n   * @optionProp mq\n   * @access public\n   * @function mq\n   * @param {string} mq - String of the media query we want to test\n   * @returns {boolean}\n   * @example\n   * Modernizr.mq allows for you to programmatically check if the current browser\n   * window state matches a media query.\n   *\n   * ```js\n   *  var query = Modernizr.mq('(min-width: 900px)');\n   *\n   *  if (query) {\n   *    // the browser window is larger than 900px\n   *  }\n   * ```\n   *\n   * Only valid media queries are supported, therefore you must always include values\n   * with your media query\n   *\n   * ```js\n   * // good\n   *  Modernizr.mq('(min-width: 900px)');\n   *\n   * // bad\n   *  Modernizr.mq('min-width');\n   * ```\n   *\n   * If you would just like to test that media queries are supported in general, use\n   *\n   * ```js\n   *  Modernizr.mq('only all'); // true if MQ are supported, false if not\n   * ```\n   *\n   *\n   * Note that if the browser does not support media queries (e.g. old IE) mq will\n   * always return false.\n   */\n\n  var mq = (function() {\n    var matchMedia = window.matchMedia || window.msMatchMedia;\n    if (matchMedia) {\n      return function(mq) {\n        var mql = matchMedia(mq);\n        return mql && mql.matches || false;\n      };\n    }\n\n    return function(mq) {\n      var bool = false;\n\n      injectElementWithStyles('@media ' + mq + ' { #modernizr { position: absolute; } }', function(node) {\n        bool = (window.getComputedStyle ?\n                window.getComputedStyle(node, null) :\n                node.currentStyle).position == 'absolute';\n      });\n\n      return bool;\n    };\n  })();\n\n\n  ModernizrProto.mq = mq;\n\n  \n\n/**\n  * @optionName html5printshiv\n  * @optionProp html5printshiv\n  */\n\n  // Take the html5 variable out of the html5shiv scope so we can return it.\n  var html5;\n  if (!isSVG) {\n\n    /**\n     * @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n     */\n    ;(function(window, document) {\n      /*jshint evil:true */\n      /** version */\n      var version = '3.7.3';\n\n      /** Preset options */\n      var options = window.html5 || {};\n\n      /** Used to skip problem elements */\n      var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n      /** Not all elements can be cloned in IE **/\n      var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n      /** Detect whether the browser supports default html5 styles */\n      var supportsHtml5Styles;\n\n      /** Name of the expando, to work with multiple documents or to re-shiv one document */\n      var expando = '_html5shiv';\n\n      /** The id for the the documents expando */\n      var expanID = 0;\n\n      /** Cached data for each document */\n      var expandoData = {};\n\n      /** Detect whether the browser supports unknown elements */\n      var supportsUnknownElements;\n\n      (function() {\n        try {\n          var a = document.createElement('a');\n          a.innerHTML = '<xyz></xyz>';\n          //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n          supportsHtml5Styles = ('hidden' in a);\n\n          supportsUnknownElements = a.childNodes.length == 1 || (function() {\n            // assign a false positive if unable to shiv\n            (document.createElement)('a');\n            var frag = document.createDocumentFragment();\n            return (\n              typeof frag.cloneNode == 'undefined' ||\n                typeof frag.createDocumentFragment == 'undefined' ||\n                typeof frag.createElement == 'undefined'\n            );\n          }());\n        } catch(e) {\n          // assign a false positive if detection fails => unable to shiv\n          supportsHtml5Styles = true;\n          supportsUnknownElements = true;\n        }\n\n      }());\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Creates a style sheet with the given CSS text and adds it to the document.\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @param {String} cssText The CSS text.\n       * @returns {StyleSheet} The style element.\n       */\n      function addStyleSheet(ownerDocument, cssText) {\n        var p = ownerDocument.createElement('p'),\n          parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n        p.innerHTML = 'x<style>' + cssText + '</style>';\n        return parent.insertBefore(p.lastChild, parent.firstChild);\n      }\n\n      /**\n       * Returns the value of `html5.elements` as an array.\n       * @private\n       * @returns {Array} An array of shived element node names.\n       */\n      function getElements() {\n        var elements = html5.elements;\n        return typeof elements == 'string' ? elements.split(' ') : elements;\n      }\n\n      /**\n       * Extends the built-in list of html5 elements\n       * @memberOf html5\n       * @param {String|Array} newElements whitespace separated list or array of new element names to shiv\n       * @param {Document} ownerDocument The context document.\n       */\n      function addElements(newElements, ownerDocument) {\n        var elements = html5.elements;\n        if(typeof elements != 'string'){\n          elements = elements.join(' ');\n        }\n        if(typeof newElements != 'string'){\n          newElements = newElements.join(' ');\n        }\n        html5.elements = elements +' '+ newElements;\n        shivDocument(ownerDocument);\n      }\n\n      /**\n       * Returns the data associated to the given document\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @returns {Object} An object of data.\n       */\n      function getExpandoData(ownerDocument) {\n        var data = expandoData[ownerDocument[expando]];\n        if (!data) {\n          data = {};\n          expanID++;\n          ownerDocument[expando] = expanID;\n          expandoData[expanID] = data;\n        }\n        return data;\n      }\n\n      /**\n       * returns a shived element for the given nodeName and document\n       * @memberOf html5\n       * @param {String} nodeName name of the element\n       * @param {Document} ownerDocument The context document.\n       * @returns {Object} The shived element.\n       */\n      function createElement(nodeName, ownerDocument, data){\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        if(supportsUnknownElements){\n          return ownerDocument.createElement(nodeName);\n        }\n        if (!data) {\n          data = getExpandoData(ownerDocument);\n        }\n        var node;\n\n        if (data.cache[nodeName]) {\n          node = data.cache[nodeName].cloneNode();\n        } else if (saveClones.test(nodeName)) {\n          node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n        } else {\n          node = data.createElem(nodeName);\n        }\n\n        // Avoid adding some elements to fragments in IE < 9 because\n        // * Attributes like `name` or `type` cannot be set/changed once an element\n        //   is inserted into a document/fragment\n        // * Link elements with `src` attributes that are inaccessible, as with\n        //   a 403 response, will cause the tab/window to crash\n        // * Script elements appended to fragments will execute when their `src`\n        //   or `text` property is set\n        return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n      }\n\n      /**\n       * returns a shived DocumentFragment for the given document\n       * @memberOf html5\n       * @param {Document} ownerDocument The context document.\n       * @returns {Object} The shived DocumentFragment.\n       */\n      function createDocumentFragment(ownerDocument, data){\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        if(supportsUnknownElements){\n          return ownerDocument.createDocumentFragment();\n        }\n        data = data || getExpandoData(ownerDocument);\n        var clone = data.frag.cloneNode(),\n          i = 0,\n          elems = getElements(),\n          l = elems.length;\n        for(;i<l;i++){\n          clone.createElement(elems[i]);\n        }\n        return clone;\n      }\n\n      /**\n       * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n       * @private\n       * @param {Document|DocumentFragment} ownerDocument The document.\n       * @param {Object} data of the document.\n       */\n      function shivMethods(ownerDocument, data) {\n        if (!data.cache) {\n          data.cache = {};\n          data.createElem = ownerDocument.createElement;\n          data.createFrag = ownerDocument.createDocumentFragment;\n          data.frag = data.createFrag();\n        }\n\n\n        ownerDocument.createElement = function(nodeName) {\n          //abort shiv\n          if (!html5.shivMethods) {\n            return data.createElem(nodeName);\n          }\n          return createElement(nodeName, ownerDocument, data);\n        };\n\n        ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n                                                        'var n=f.cloneNode(),c=n.createElement;' +\n                                                        'h.shivMethods&&(' +\n                                                        // unroll the `createElement` calls\n                                                        getElements().join().replace(/[\\w\\-:]+/g, function(nodeName) {\n          data.createElem(nodeName);\n          data.frag.createElement(nodeName);\n          return 'c(\"' + nodeName + '\")';\n        }) +\n          ');return n}'\n                                                       )(html5, data.frag);\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Shivs the given document.\n       * @memberOf html5\n       * @param {Document} ownerDocument The document to shiv.\n       * @returns {Document} The shived document.\n       */\n      function shivDocument(ownerDocument) {\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        var data = getExpandoData(ownerDocument);\n\n        if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n          data.hasCSS = !!addStyleSheet(ownerDocument,\n                                        // corrects block display not defined in IE6/7/8/9\n                                        'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n                                        // adds styling not present in IE6/7/8/9\n                                        'mark{background:#FF0;color:#000}' +\n                                        // hides non-rendered elements\n                                        'template{display:none}'\n                                       );\n        }\n        if (!supportsUnknownElements) {\n          shivMethods(ownerDocument, data);\n        }\n        return ownerDocument;\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * The `html5` object is exposed so that more elements can be shived and\n       * existing shiving can be detected on iframes.\n       * @type Object\n       * @example\n       *\n       * // options can be changed before the script is included\n       * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n       */\n      var html5 = {\n\n        /**\n         * An array or space separated string of node names of the elements to shiv.\n         * @memberOf html5\n         * @type Array|String\n         */\n        'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video',\n\n        /**\n         * current version of html5shiv\n         */\n        'version': version,\n\n        /**\n         * A flag to indicate that the HTML5 style sheet should be inserted.\n         * @memberOf html5\n         * @type Boolean\n         */\n        'shivCSS': (options.shivCSS !== false),\n\n        /**\n         * Is equal to true if a browser supports creating unknown/HTML5 elements\n         * @memberOf html5\n         * @type boolean\n         */\n        'supportsUnknownElements': supportsUnknownElements,\n\n        /**\n         * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n         * methods should be overwritten.\n         * @memberOf html5\n         * @type Boolean\n         */\n        'shivMethods': (options.shivMethods !== false),\n\n        /**\n         * A string to describe the type of `html5` object (\"default\" or \"default print\").\n         * @memberOf html5\n         * @type String\n         */\n        'type': 'default',\n\n        // shivs the document according to the specified `html5` object options\n        'shivDocument': shivDocument,\n\n        //creates a shived element\n        createElement: createElement,\n\n        //creates a shived documentFragment\n        createDocumentFragment: createDocumentFragment,\n\n        //extends list of elements\n        addElements: addElements\n      };\n\n      /*--------------------------------------------------------------------------*/\n\n      // expose html5\n      window.html5 = html5;\n\n      // shiv the document\n      shivDocument(document);\n\n      /*------------------------------- Print Shiv -------------------------------*/\n\n      /** Used to filter media types */\n      var reMedia = /^$|\\b(?:all|print)\\b/;\n\n      /** Used to namespace printable elements */\n      var shivNamespace = 'html5shiv';\n\n      /** Detect whether the browser supports shivable style sheets */\n      var supportsShivableSheets = !supportsUnknownElements && (function() {\n        // assign a false negative if unable to shiv\n        var docEl = document.documentElement;\n        return !(\n          typeof document.namespaces == 'undefined' ||\n            typeof document.parentWindow == 'undefined' ||\n            typeof docEl.applyElement == 'undefined' ||\n            typeof docEl.removeNode == 'undefined' ||\n            typeof window.attachEvent == 'undefined'\n        );\n      }());\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Wraps all HTML5 elements in the given document with printable elements.\n       * (eg. the \"header\" element is wrapped with the \"html5shiv:header\" element)\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @returns {Array} An array wrappers added.\n       */\n      function addWrappers(ownerDocument) {\n        var node,\n        nodes = ownerDocument.getElementsByTagName('*'),\n          index = nodes.length,\n          reElements = RegExp('^(?:' + getElements().join('|') + ')$', 'i'),\n          result = [];\n\n        while (index--) {\n          node = nodes[index];\n          if (reElements.test(node.nodeName)) {\n            result.push(node.applyElement(createWrapper(node)));\n          }\n        }\n        return result;\n      }\n\n      /**\n       * Creates a printable wrapper for the given element.\n       * @private\n       * @param {Element} element The element.\n       * @returns {Element} The wrapper.\n       */\n      function createWrapper(element) {\n        var node,\n        nodes = element.attributes,\n          index = nodes.length,\n          wrapper = element.ownerDocument.createElement(shivNamespace + ':' + element.nodeName);\n\n        // copy element attributes to the wrapper\n        while (index--) {\n          node = nodes[index];\n          node.specified && wrapper.setAttribute(node.nodeName, node.nodeValue);\n        }\n        // copy element styles to the wrapper\n        wrapper.style.cssText = element.style.cssText;\n        return wrapper;\n      }\n\n      /**\n       * Shivs the given CSS text.\n       * (eg. header{} becomes html5shiv\\:header{})\n       * @private\n       * @param {String} cssText The CSS text to shiv.\n       * @returns {String} The shived CSS text.\n       */\n      function shivCssText(cssText) {\n        var pair,\n        parts = cssText.split('{'),\n          index = parts.length,\n          reElements = RegExp('(^|[\\\\s,>+~])(' + getElements().join('|') + ')(?=[[\\\\s,>+~#.:]|$)', 'gi'),\n          replacement = '$1' + shivNamespace + '\\\\:$2';\n\n        while (index--) {\n          pair = parts[index] = parts[index].split('}');\n          pair[pair.length - 1] = pair[pair.length - 1].replace(reElements, replacement);\n          parts[index] = pair.join('}');\n        }\n        return parts.join('{');\n      }\n\n      /**\n       * Removes the given wrappers, leaving the original elements.\n       * @private\n       * @params {Array} wrappers An array of printable wrappers.\n       */\n      function removeWrappers(wrappers) {\n        var index = wrappers.length;\n        while (index--) {\n          wrappers[index].removeNode();\n        }\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Shivs the given document for print.\n       * @memberOf html5\n       * @param {Document} ownerDocument The document to shiv.\n       * @returns {Document} The shived document.\n       */\n      function shivPrint(ownerDocument) {\n        var shivedSheet,\n        wrappers,\n        data = getExpandoData(ownerDocument),\n          namespaces = ownerDocument.namespaces,\n          ownerWindow = ownerDocument.parentWindow;\n\n        if (!supportsShivableSheets || ownerDocument.printShived) {\n          return ownerDocument;\n        }\n        if (typeof namespaces[shivNamespace] == 'undefined') {\n          namespaces.add(shivNamespace);\n        }\n\n        function removeSheet() {\n          clearTimeout(data._removeSheetTimer);\n          if (shivedSheet) {\n            shivedSheet.removeNode(true);\n          }\n          shivedSheet= null;\n        }\n\n        ownerWindow.attachEvent('onbeforeprint', function() {\n\n          removeSheet();\n\n          var imports,\n          length,\n          sheet,\n          collection = ownerDocument.styleSheets,\n            cssText = [],\n            index = collection.length,\n            sheets = Array(index);\n\n          // convert styleSheets collection to an array\n          while (index--) {\n            sheets[index] = collection[index];\n          }\n          // concat all style sheet CSS text\n          while ((sheet = sheets.pop())) {\n            // IE does not enforce a same origin policy for external style sheets...\n            // but has trouble with some dynamically created stylesheets\n            if (!sheet.disabled && reMedia.test(sheet.media)) {\n\n              try {\n                imports = sheet.imports;\n                length = imports.length;\n              } catch(er){\n                length = 0;\n              }\n\n              for (index = 0; index < length; index++) {\n                sheets.push(imports[index]);\n              }\n\n              try {\n                cssText.push(sheet.cssText);\n              } catch(er){}\n            }\n          }\n\n          // wrap all HTML5 elements with printable elements and add the shived style sheet\n          cssText = shivCssText(cssText.reverse().join(''));\n          wrappers = addWrappers(ownerDocument);\n          shivedSheet = addStyleSheet(ownerDocument, cssText);\n\n        });\n\n        ownerWindow.attachEvent('onafterprint', function() {\n          // remove wrappers, leaving the original elements, and remove the shived style sheet\n          removeWrappers(wrappers);\n          clearTimeout(data._removeSheetTimer);\n          data._removeSheetTimer = setTimeout(removeSheet, 500);\n        });\n\n        ownerDocument.printShived = true;\n        return ownerDocument;\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      // expose API\n      html5.type += ' print';\n      html5.shivPrint = shivPrint;\n\n      // shiv for print\n      shivPrint(document);\n\n      if(typeof module == 'object' && module.exports){\n        module.exports = html5;\n      }\n\n    }(typeof window !== \"undefined\" ? window : this, document));\n  }\n\n  ;\n\n  /**\n   * If the browsers follow the spec, then they would expose vendor-specific style as:\n   *   elem.style.WebkitBorderRadius\n   * instead of something like the following, which would be technically incorrect:\n   *   elem.style.webkitBorderRadius\n\n   * Webkit ghosts their properties in lowercase but Opera & Moz do not.\n   * Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n   *   erik.eae.net/archives/2008/03/10/21.48.10/\n\n   * More here: github.com/Modernizr/Modernizr/issues/issue/21\n   *\n   * @access private\n   * @returns {string} The string representing the vendor-specific style properties\n   */\n\n  var omPrefixes = 'Moz O ms Webkit';\n  \n\n  var cssomPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.split(' ') : []);\n  ModernizrProto._cssomPrefixes = cssomPrefixes;\n  \n\n\n  /**\n   * contains checks to see if a string contains another string\n   *\n   * @access private\n   * @function contains\n   * @param {string} str - The string we want to check for substrings\n   * @param {string} substr - The substring we want to search the first string for\n   * @returns {boolean}\n   */\n\n  function contains(str, substr) {\n    return !!~('' + str).indexOf(substr);\n  }\n\n  ;\n\n  /**\n   * Create our \"modernizr\" element that we do most feature tests on.\n   *\n   * @access private\n   */\n\n  var modElem = {\n    elem: createElement('modernizr')\n  };\n\n  // Clean up this element\n  Modernizr._q.push(function() {\n    delete modElem.elem;\n  });\n\n  \n\n  var mStyle = {\n    style: modElem.elem.style\n  };\n\n  // kill ref for gc, must happen before mod.elem is removed, so we unshift on to\n  // the front of the queue.\n  Modernizr._q.unshift(function() {\n    delete mStyle.style;\n  });\n\n  \n\n  /**\n   * domToCSS takes a camelCase string and converts it to kebab-case\n   * e.g. boxSizing -> box-sizing\n   *\n   * @access private\n   * @function domToCSS\n   * @param {string} name - String name of camelCase prop we want to convert\n   * @returns {string} The kebab-case version of the supplied name\n   */\n\n  function domToCSS(name) {\n    return name.replace(/([A-Z])/g, function(str, m1) {\n      return '-' + m1.toLowerCase();\n    }).replace(/^ms-/, '-ms-');\n  }\n  ;\n\n  /**\n   * nativeTestProps allows for us to use native feature detection functionality if available.\n   * some prefixed form, or false, in the case of an unsupported rule\n   *\n   * @access private\n   * @function nativeTestProps\n   * @param {array} props - An array of property names\n   * @param {string} value - A string representing the value we want to check via @supports\n   * @returns {boolean|undefined} A boolean when @supports exists, undefined otherwise\n   */\n\n  // Accepts a list of property names and a single value\n  // Returns `undefined` if native detection not available\n  function nativeTestProps(props, value) {\n    var i = props.length;\n    // Start with the JS API: http://www.w3.org/TR/css3-conditional/#the-css-interface\n    if ('CSS' in window && 'supports' in window.CSS) {\n      // Try every prefixed variant of the property\n      while (i--) {\n        if (window.CSS.supports(domToCSS(props[i]), value)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    // Otherwise fall back to at-rule (for Opera 12.x)\n    else if ('CSSSupportsRule' in window) {\n      // Build a condition string for every prefixed variant\n      var conditionText = [];\n      while (i--) {\n        conditionText.push('(' + domToCSS(props[i]) + ':' + value + ')');\n      }\n      conditionText = conditionText.join(' or ');\n      return injectElementWithStyles('@supports (' + conditionText + ') { #modernizr { position: absolute; } }', function(node) {\n        return getComputedStyle(node, null).position == 'absolute';\n      });\n    }\n    return undefined;\n  }\n  ;\n\n  /**\n   * cssToDOM takes a kebab-case string and converts it to camelCase\n   * e.g. box-sizing -> boxSizing\n   *\n   * @access private\n   * @function cssToDOM\n   * @param {string} name - String name of kebab-case prop we want to convert\n   * @returns {string} The camelCase version of the supplied name\n   */\n\n  function cssToDOM(name) {\n    return name.replace(/([a-z])-([a-z])/g, function(str, m1, m2) {\n      return m1 + m2.toUpperCase();\n    }).replace(/^-/, '');\n  }\n  ;\n\n  // testProps is a generic CSS / DOM property test.\n\n  // In testing support for a given CSS property, it's legit to test:\n  //    `elem.style[styleName] !== undefined`\n  // If the property is supported it will return an empty string,\n  // if unsupported it will return undefined.\n\n  // We'll take advantage of this quick test and skip setting a style\n  // on our modernizr element, but instead just testing undefined vs\n  // empty string.\n\n  // Property names can be provided in either camelCase or kebab-case.\n\n  function testProps(props, prefixed, value, skipValueTest) {\n    skipValueTest = is(skipValueTest, 'undefined') ? false : skipValueTest;\n\n    // Try native detect first\n    if (!is(value, 'undefined')) {\n      var result = nativeTestProps(props, value);\n      if (!is(result, 'undefined')) {\n        return result;\n      }\n    }\n\n    // Otherwise do it properly\n    var afterInit, i, propsLength, prop, before;\n\n    // If we don't have a style element, that means we're running async or after\n    // the core tests, so we'll need to create our own elements to use\n\n    // inside of an SVG element, in certain browsers, the `style` element is only\n    // defined for valid tags. Therefore, if `modernizr` does not have one, we\n    // fall back to a less used element and hope for the best.\n    var elems = ['modernizr', 'tspan'];\n    while (!mStyle.style) {\n      afterInit = true;\n      mStyle.modElem = createElement(elems.shift());\n      mStyle.style = mStyle.modElem.style;\n    }\n\n    // Delete the objects if we created them.\n    function cleanElems() {\n      if (afterInit) {\n        delete mStyle.style;\n        delete mStyle.modElem;\n      }\n    }\n\n    propsLength = props.length;\n    for (i = 0; i < propsLength; i++) {\n      prop = props[i];\n      before = mStyle.style[prop];\n\n      if (contains(prop, '-')) {\n        prop = cssToDOM(prop);\n      }\n\n      if (mStyle.style[prop] !== undefined) {\n\n        // If value to test has been passed in, do a set-and-check test.\n        // 0 (integer) is a valid property value, so check that `value` isn't\n        // undefined, rather than just checking it's truthy.\n        if (!skipValueTest && !is(value, 'undefined')) {\n\n          // Needs a try catch block because of old IE. This is slow, but will\n          // be avoided in most cases because `skipValueTest` will be used.\n          try {\n            mStyle.style[prop] = value;\n          } catch (e) {}\n\n          // If the property value has changed, we assume the value used is\n          // supported. If `value` is empty string, it'll fail here (because\n          // it hasn't changed), which matches how browsers have implemented\n          // CSS.supports()\n          if (mStyle.style[prop] != before) {\n            cleanElems();\n            return prefixed == 'pfx' ? prop : true;\n          }\n        }\n        // Otherwise just return true, or the property name if this is a\n        // `prefixed()` call\n        else {\n          cleanElems();\n          return prefixed == 'pfx' ? prop : true;\n        }\n      }\n    }\n    cleanElems();\n    return false;\n  }\n\n  ;\n\n  /**\n   * List of JavaScript DOM values used for tests\n   *\n   * @memberof Modernizr\n   * @name Modernizr._domPrefixes\n   * @optionName Modernizr._domPrefixes\n   * @optionProp domPrefixes\n   * @access public\n   * @example\n   *\n   * Modernizr._domPrefixes is exactly the same as [_prefixes](#modernizr-_prefixes), but rather\n   * than kebab-case properties, all properties are their Capitalized variant\n   *\n   * ```js\n   * Modernizr._domPrefixes === [ \"Moz\", \"O\", \"ms\", \"Webkit\" ];\n   * ```\n   */\n\n  var domPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.toLowerCase().split(' ') : []);\n  ModernizrProto._domPrefixes = domPrefixes;\n  \n\n  /**\n   * fnBind is a super small [bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind) polyfill.\n   *\n   * @access private\n   * @function fnBind\n   * @param {function} fn - a function you want to change `this` reference to\n   * @param {object} that - the `this` you want to call the function with\n   * @returns {function} The wrapped version of the supplied function\n   */\n\n  function fnBind(fn, that) {\n    return function() {\n      return fn.apply(that, arguments);\n    };\n  }\n\n  ;\n\n  /**\n   * testDOMProps is a generic DOM property test; if a browser supports\n   *   a certain property, it won't return undefined for it.\n   *\n   * @access private\n   * @function testDOMProps\n   * @param {array.<string>} props - An array of properties to test for\n   * @param {object} obj - An object or Element you want to use to test the parameters again\n   * @param {boolean|object} elem - An Element to bind the property lookup again. Use `false` to prevent the check\n   */\n  function testDOMProps(props, obj, elem) {\n    var item;\n\n    for (var i in props) {\n      if (props[i] in obj) {\n\n        // return the property name as a string\n        if (elem === false) {\n          return props[i];\n        }\n\n        item = obj[props[i]];\n\n        // let's bind a function\n        if (is(item, 'function')) {\n          // bind to obj unless overriden\n          return fnBind(item, elem || obj);\n        }\n\n        // return the unbound function or obj or value\n        return item;\n      }\n    }\n    return false;\n  }\n\n  ;\n\n  /**\n   * testPropsAll tests a list of DOM properties we want to check against.\n   * We specify literally ALL possible (known and/or likely) properties on\n   * the element including the non-vendor prefixed one, for forward-\n   * compatibility.\n   *\n   * @access private\n   * @function testPropsAll\n   * @param {string} prop - A string of the property to test for\n   * @param {string|object} [prefixed] - An object to check the prefixed properties on. Use a string to skip\n   * @param {HTMLElement|SVGElement} [elem] - An element used to test the property and value against\n   * @param {string} [value] - A string of a css value\n   * @param {boolean} [skipValueTest] - An boolean representing if you want to test if value sticks when set\n   */\n  function testPropsAll(prop, prefixed, elem, value, skipValueTest) {\n\n    var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n    props = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n    // did they call .prefixed('boxSizing') or are we just testing a prop?\n    if (is(prefixed, 'string') || is(prefixed, 'undefined')) {\n      return testProps(props, prefixed, value, skipValueTest);\n\n      // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n    } else {\n      props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n      return testDOMProps(props, prefixed, elem);\n    }\n  }\n\n  // Modernizr.testAllProps() investigates whether a given style property,\n  // or any of its vendor-prefixed variants, is recognized\n  //\n  // Note that the property names must be provided in the camelCase variant.\n  // Modernizr.testAllProps('boxSizing')\n  ModernizrProto.testAllProps = testPropsAll;\n\n  \n\n  /**\n   * testAllProps determines whether a given CSS property is supported in the browser\n   *\n   * @memberof Modernizr\n   * @name Modernizr.testAllProps\n   * @optionName Modernizr.testAllProps()\n   * @optionProp testAllProps\n   * @access public\n   * @function testAllProps\n   * @param {string} prop - String naming the property to test (either camelCase or kebab-case)\n   * @param {string} [value] - String of the value to test\n   * @param {boolean} [skipValueTest=false] - Whether to skip testing that the value is supported when using non-native detection\n   * @example\n   *\n   * testAllProps determines whether a given CSS property, in some prefixed form,\n   * is supported by the browser.\n   *\n   * ```js\n   * testAllProps('boxSizing')  // true\n   * ```\n   *\n   * It can optionally be given a CSS value in string form to test if a property\n   * value is valid\n   *\n   * ```js\n   * testAllProps('display', 'block') // true\n   * testAllProps('display', 'penguin') // false\n   * ```\n   *\n   * A boolean can be passed as a third parameter to skip the value check when\n   * native detection (@supports) isn't available.\n   *\n   * ```js\n   * testAllProps('shapeOutside', 'content-box', true);\n   * ```\n   */\n\n  function testAllProps(prop, value, skipValueTest) {\n    return testPropsAll(prop, undefined, undefined, value, skipValueTest);\n  }\n  ModernizrProto.testAllProps = testAllProps;\n  \n/*!\n{\n  \"name\": \"CSS Transforms\",\n  \"property\": \"csstransforms\",\n  \"caniuse\": \"transforms2d\",\n  \"tags\": [\"css\"]\n}\n!*/\n\n  Modernizr.addTest('csstransforms', function() {\n    // Android < 3.0 is buggy, so we sniff and blacklist\n    // http://git.io/hHzL7w\n    return navigator.userAgent.indexOf('Android 2.') === -1 &&\n           testAllProps('transform', 'scale(1)', true);\n  });\n\n/*!\n{\n  \"name\": \"Flexbox\",\n  \"property\": \"flexbox\",\n  \"caniuse\": \"flexbox\",\n  \"tags\": [\"css\"],\n  \"notes\": [{\n    \"name\": \"The _new_ flexbox\",\n    \"href\": \"http://dev.w3.org/csswg/css3-flexbox\"\n  }],\n  \"warnings\": [\n    \"A `true` result for this detect does not imply that the `flex-wrap` property is supported; see the `flexwrap` detect.\"\n  ]\n}\n!*/\n/* DOC\nDetects support for the Flexible Box Layout model, a.k.a. Flexbox, which allows easy manipulation of layout order and sizing within a container.\n*/\n\n  Modernizr.addTest('flexbox', testAllProps('flexBasis', '1px', true));\n\n/*!\n{\n  \"name\": \"Inline SVG\",\n  \"property\": \"inlinesvg\",\n  \"caniuse\": \"svg-html5\",\n  \"tags\": [\"svg\"],\n  \"notes\": [{\n    \"name\": \"Test page\",\n    \"href\": \"https://paulirish.com/demo/inline-svg\"\n  }, {\n    \"name\": \"Test page and results\",\n    \"href\": \"https://codepen.io/eltonmesquita/full/GgXbvo/\"\n  }],\n  \"polyfills\": [\"inline-svg-polyfill\"],\n  \"knownBugs\": [\"False negative on some Chromia browsers.\"]\n}\n!*/\n/* DOC\nDetects support for inline SVG in HTML (not within XHTML).\n*/\n\n  Modernizr.addTest('inlinesvg', function() {\n    var div = createElement('div');\n    div.innerHTML = '<svg/>';\n    return (typeof SVGRect != 'undefined' && div.firstChild && div.firstChild.namespaceURI) == 'http://www.w3.org/2000/svg';\n  });\n\n\n  /**\n   * List of property values to set for css tests. See ticket #21\n   * http://git.io/vUGl4\n   *\n   * @memberof Modernizr\n   * @name Modernizr._prefixes\n   * @optionName Modernizr._prefixes\n   * @optionProp prefixes\n   * @access public\n   * @example\n   *\n   * Modernizr._prefixes is the internal list of prefixes that we test against\n   * inside of things like [prefixed](#modernizr-prefixed) and [prefixedCSS](#-code-modernizr-prefixedcss). It is simply\n   * an array of kebab-case vendor prefixes you can use within your code.\n   *\n   * Some common use cases include\n   *\n   * Generating all possible prefixed version of a CSS property\n   * ```js\n   * var rule = Modernizr._prefixes.join('transform: rotate(20deg); ');\n   *\n   * rule === 'transform: rotate(20deg); webkit-transform: rotate(20deg); moz-transform: rotate(20deg); o-transform: rotate(20deg); ms-transform: rotate(20deg);'\n   * ```\n   *\n   * Generating all possible prefixed version of a CSS value\n   * ```js\n   * rule = 'display:' +  Modernizr._prefixes.join('flex; display:') + 'flex';\n   *\n   * rule === 'display:flex; display:-webkit-flex; display:-moz-flex; display:-o-flex; display:-ms-flex; display:flex'\n   * ```\n   */\n\n  var prefixes = (ModernizrProto._config.usePrefixes ? ' -webkit- -moz- -o- -ms- '.split(' ') : []);\n\n  // expose these for the plugin API. Look in the source for how to join() them against your input\n  ModernizrProto._prefixes = prefixes;\n\n  \n\n  /**\n   * testStyles injects an element with style element and some CSS rules\n   *\n   * @memberof Modernizr\n   * @name Modernizr.testStyles\n   * @optionName Modernizr.testStyles()\n   * @optionProp testStyles\n   * @access public\n   * @function testStyles\n   * @param {string} rule - String representing a css rule\n   * @param {function} callback - A function that is used to test the injected element\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\n   * @returns {boolean}\n   * @example\n   *\n   * `Modernizr.testStyles` takes a CSS rule and injects it onto the current page\n   * along with (possibly multiple) DOM elements. This lets you check for features\n   * that can not be detected by simply checking the [IDL](https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Interface_development_guide/IDL_interface_rules).\n   *\n   * ```js\n   * Modernizr.testStyles('#modernizr { width: 9px; color: papayawhip; }', function(elem, rule) {\n   *   // elem is the first DOM node in the page (by default #modernizr)\n   *   // rule is the first argument you supplied - the CSS rule in string form\n   *\n   *   addTest('widthworks', elem.style.width === '9px')\n   * });\n   * ```\n   *\n   * If your test requires multiple nodes, you can include a third argument\n   * indicating how many additional div elements to include on the page. The\n   * additional nodes are injected as children of the `elem` that is returned as\n   * the first argument to the callback.\n   *\n   * ```js\n   * Modernizr.testStyles('#modernizr {width: 1px}; #modernizr2 {width: 2px}', function(elem) {\n   *   document.getElementById('modernizr').style.width === '1px'; // true\n   *   document.getElementById('modernizr2').style.width === '2px'; // true\n   *   elem.firstChild === document.getElementById('modernizr2'); // true\n   * }, 1);\n   * ```\n   *\n   * By default, all of the additional elements have an ID of `modernizr[n]`, where\n   * `n` is its index (e.g. the first additional, second overall is `#modernizr2`,\n   * the second additional is `#modernizr3`, etc.).\n   * If you want to have more meaningful IDs for your function, you can provide\n   * them as the fourth argument, as an array of strings\n   *\n   * ```js\n   * Modernizr.testStyles('#foo {width: 10px}; #bar {height: 20px}', function(elem) {\n   *   elem.firstChild === document.getElementById('foo'); // true\n   *   elem.lastChild === document.getElementById('bar'); // true\n   * }, 2, ['foo', 'bar']);\n   * ```\n   *\n   */\n\n  var testStyles = ModernizrProto.testStyles = injectElementWithStyles;\n  \n/*!\n{\n  \"name\": \"Touch Events\",\n  \"property\": \"touchevents\",\n  \"caniuse\" : \"touch\",\n  \"tags\": [\"media\", \"attribute\"],\n  \"notes\": [{\n    \"name\": \"Touch Events spec\",\n    \"href\": \"https://www.w3.org/TR/2013/WD-touch-events-20130124/\"\n  }],\n  \"warnings\": [\n    \"Indicates if the browser supports the Touch Events spec, and does not necessarily reflect a touchscreen device\"\n  ],\n  \"knownBugs\": [\n    \"False-positive on some configurations of Nokia N900\",\n    \"False-positive on some BlackBerry 6.0 builds – https://github.com/Modernizr/Modernizr/issues/372#issuecomment-3112695\"\n  ]\n}\n!*/\n/* DOC\nIndicates if the browser supports the W3C Touch Events API.\n\nThis *does not* necessarily reflect a touchscreen device:\n\n* Older touchscreen devices only emulate mouse events\n* Modern IE touch devices implement the Pointer Events API instead: use `Modernizr.pointerevents` to detect support for that\n* Some browsers & OS setups may enable touch APIs when no touchscreen is connected\n* Future browsers may implement other event models for touch interactions\n\nSee this article: [You Can't Detect A Touchscreen](http://www.stucox.com/blog/you-cant-detect-a-touchscreen/).\n\nIt's recommended to bind both mouse and touch/pointer events simultaneously – see [this HTML5 Rocks tutorial](http://www.html5rocks.com/en/mobile/touchandmouse/).\n\nThis test will also return `true` for Firefox 4 Multitouch support.\n*/\n\n  // Chrome (desktop) used to lie about its support on this, but that has since been rectified: http://crbug.com/36415\n  Modernizr.addTest('touchevents', function() {\n    var bool;\n    if (('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\n      bool = true;\n    } else {\n      // include the 'heartz' as a way to have a non matching MQ to help terminate the join\n      // https://git.io/vznFH\n      var query = ['@media (', prefixes.join('touch-enabled),('), 'heartz', ')', '{#modernizr{top:9px;position:absolute}}'].join('');\n      testStyles(query, function(node) {\n        bool = node.offsetTop === 9;\n      });\n    }\n    return bool;\n  });\n\n\n  // Run each test\n  testRunner();\n\n  // Remove the \"no-js\" class if it exists\n  setClasses(classes);\n\n  delete ModernizrProto.addTest;\n  delete ModernizrProto.addAsyncTest;\n\n  // Run the things that are supposed to run after the tests\n  for (var i = 0; i < Modernizr._q.length; i++) {\n    Modernizr._q[i]();\n  }\n\n  // Leak Modernizr namespace\n  window.Modernizr = Modernizr;\n\n\n;\n\n})(window, document);",";(function () {\n\t'use strict';\n\n\t/**\n\t * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.\n\t *\n\t * @codingstandard ftlabs-jsv2\n\t * @copyright The Financial Times Limited [All Rights Reserved]\n\t * @license MIT License (see LICENSE.txt)\n\t */\n\n\t/*jslint browser:true, node:true*/\n\t/*global define, Event, Node*/\n\n\n\t/**\n\t * Instantiate fast-clicking listeners on the specified layer.\n\t *\n\t * @constructor\n\t * @param {Element} layer The layer to listen on\n\t * @param {Object} [options={}] The options to override the defaults\n\t */\n\tfunction FastClick(layer, options) {\n\t\tvar oldOnClick;\n\n\t\toptions = options || {};\n\n\t\t/**\n\t\t * Whether a click is currently being tracked.\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\tthis.trackingClick = false;\n\n\n\t\t/**\n\t\t * Timestamp for when click tracking started.\n\t\t *\n\t\t * @type number\n\t\t */\n\t\tthis.trackingClickStart = 0;\n\n\n\t\t/**\n\t\t * The element being tracked for a click.\n\t\t *\n\t\t * @type EventTarget\n\t\t */\n\t\tthis.targetElement = null;\n\n\n\t\t/**\n\t\t * X-coordinate of touch start event.\n\t\t *\n\t\t * @type number\n\t\t */\n\t\tthis.touchStartX = 0;\n\n\n\t\t/**\n\t\t * Y-coordinate of touch start event.\n\t\t *\n\t\t * @type number\n\t\t */\n\t\tthis.touchStartY = 0;\n\n\n\t\t/**\n\t\t * ID of the last touch, retrieved from Touch.identifier.\n\t\t *\n\t\t * @type number\n\t\t */\n\t\tthis.lastTouchIdentifier = 0;\n\n\n\t\t/**\n\t\t * Touchmove boundary, beyond which a click will be cancelled.\n\t\t *\n\t\t * @type number\n\t\t */\n\t\tthis.touchBoundary = options.touchBoundary || 10;\n\n\n\t\t/**\n\t\t * The FastClick layer.\n\t\t *\n\t\t * @type Element\n\t\t */\n\t\tthis.layer = layer;\n\n\t\t/**\n\t\t * The minimum time between tap(touchstart and touchend) events\n\t\t *\n\t\t * @type number\n\t\t */\n\t\tthis.tapDelay = options.tapDelay || 200;\n\n\t\t/**\n\t\t * The maximum time for a tap\n\t\t *\n\t\t * @type number\n\t\t */\n\t\tthis.tapTimeout = options.tapTimeout || 700;\n\n\t\tif (FastClick.notNeeded(layer)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Some old versions of Android don't have Function.prototype.bind\n\t\tfunction bind(method, context) {\n\t\t\treturn function() { return method.apply(context, arguments); };\n\t\t}\n\n\n\t\tvar methods = ['onMouse', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel'];\n\t\tvar context = this;\n\t\tfor (var i = 0, l = methods.length; i < l; i++) {\n\t\t\tcontext[methods[i]] = bind(context[methods[i]], context);\n\t\t}\n\n\t\t// Set up event handlers as required\n\t\tif (deviceIsAndroid) {\n\t\t\tlayer.addEventListener('mouseover', this.onMouse, true);\n\t\t\tlayer.addEventListener('mousedown', this.onMouse, true);\n\t\t\tlayer.addEventListener('mouseup', this.onMouse, true);\n\t\t}\n\n\t\tlayer.addEventListener('click', this.onClick, true);\n\t\tlayer.addEventListener('touchstart', this.onTouchStart, false);\n\t\tlayer.addEventListener('touchmove', this.onTouchMove, false);\n\t\tlayer.addEventListener('touchend', this.onTouchEnd, false);\n\t\tlayer.addEventListener('touchcancel', this.onTouchCancel, false);\n\n\t\t// Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)\n\t\t// which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick\n\t\t// layer when they are cancelled.\n\t\tif (!Event.prototype.stopImmediatePropagation) {\n\t\t\tlayer.removeEventListener = function(type, callback, capture) {\n\t\t\t\tvar rmv = Node.prototype.removeEventListener;\n\t\t\t\tif (type === 'click') {\n\t\t\t\t\trmv.call(layer, type, callback.hijacked || callback, capture);\n\t\t\t\t} else {\n\t\t\t\t\trmv.call(layer, type, callback, capture);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlayer.addEventListener = function(type, callback, capture) {\n\t\t\t\tvar adv = Node.prototype.addEventListener;\n\t\t\t\tif (type === 'click') {\n\t\t\t\t\tadv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {\n\t\t\t\t\t\tif (!event.propagationStopped) {\n\t\t\t\t\t\t\tcallback(event);\n\t\t\t\t\t\t}\n\t\t\t\t\t}), capture);\n\t\t\t\t} else {\n\t\t\t\t\tadv.call(layer, type, callback, capture);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// If a handler is already declared in the element's onclick attribute, it will be fired before\n\t\t// FastClick's onClick handler. Fix this by pulling out the user-defined handler function and\n\t\t// adding it as listener.\n\t\tif (typeof layer.onclick === 'function') {\n\n\t\t\t// Android browser on at least 3.2 requires a new reference to the function in layer.onclick\n\t\t\t// - the old one won't work if passed to addEventListener directly.\n\t\t\toldOnClick = layer.onclick;\n\t\t\tlayer.addEventListener('click', function(event) {\n\t\t\t\toldOnClick(event);\n\t\t\t}, false);\n\t\t\tlayer.onclick = null;\n\t\t}\n\t}\n\n\t/**\n\t* Windows Phone 8.1 fakes user agent string to look like Android and iPhone.\n\t*\n\t* @type boolean\n\t*/\n\tvar deviceIsWindowsPhone = navigator.userAgent.indexOf(\"Windows Phone\") >= 0;\n\n\t/**\n\t * Android requires exceptions.\n\t *\n\t * @type boolean\n\t */\n\tvar deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0 && !deviceIsWindowsPhone;\n\n\n\t/**\n\t * iOS requires exceptions.\n\t *\n\t * @type boolean\n\t */\n\tvar deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent) && !deviceIsWindowsPhone;\n\n\n\t/**\n\t * iOS 4 requires an exception for select elements.\n\t *\n\t * @type boolean\n\t */\n\tvar deviceIsIOS4 = deviceIsIOS && (/OS 4_\\d(_\\d)?/).test(navigator.userAgent);\n\n\n\t/**\n\t * iOS 6.0-7.* requires the target element to be manually derived\n\t *\n\t * @type boolean\n\t */\n\tvar deviceIsIOSWithBadTarget = deviceIsIOS && (/OS [6-7]_\\d/).test(navigator.userAgent);\n\n\t/**\n\t * BlackBerry requires exceptions.\n\t *\n\t * @type boolean\n\t */\n\tvar deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0;\n\n\t/**\n\t * Determine whether a given element requires a native click.\n\t *\n\t * @param {EventTarget|Element} target Target DOM element\n\t * @returns {boolean} Returns true if the element needs a native click\n\t */\n\tFastClick.prototype.needsClick = function(target) {\n\t\tswitch (target.nodeName.toLowerCase()) {\n\n\t\t// Don't send a synthetic click to disabled inputs (issue #62)\n\t\tcase 'button':\n\t\tcase 'select':\n\t\tcase 'textarea':\n\t\t\tif (target.disabled) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 'input':\n\n\t\t\t// File inputs need real clicks on iOS 6 due to a browser bug (issue #68)\n\t\t\tif ((deviceIsIOS && target.type === 'file') || target.disabled) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 'label':\n\t\tcase 'iframe': // iOS8 homescreen apps can prevent events bubbling into frames\n\t\tcase 'video':\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (/\\bneedsclick\\b/).test(target.className);\n\t};\n\n\n\t/**\n\t * Determine whether a given element requires a call to focus to simulate click into element.\n\t *\n\t * @param {EventTarget|Element} target Target DOM element\n\t * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.\n\t */\n\tFastClick.prototype.needsFocus = function(target) {\n\t\tswitch (target.nodeName.toLowerCase()) {\n\t\tcase 'textarea':\n\t\t\treturn true;\n\t\tcase 'select':\n\t\t\treturn !deviceIsAndroid;\n\t\tcase 'input':\n\t\t\tswitch (target.type) {\n\t\t\tcase 'button':\n\t\t\tcase 'checkbox':\n\t\t\tcase 'file':\n\t\t\tcase 'image':\n\t\t\tcase 'radio':\n\t\t\tcase 'submit':\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// No point in attempting to focus disabled inputs\n\t\t\treturn !target.disabled && !target.readOnly;\n\t\tdefault:\n\t\t\treturn (/\\bneedsfocus\\b/).test(target.className);\n\t\t}\n\t};\n\n\n\t/**\n\t * Send a click event to the specified element.\n\t *\n\t * @param {EventTarget|Element} targetElement\n\t * @param {Event} event\n\t */\n\tFastClick.prototype.sendClick = function(targetElement, event) {\n\t\tvar clickEvent, touch;\n\n\t\t// On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)\n\t\tif (document.activeElement && document.activeElement !== targetElement) {\n\t\t\tdocument.activeElement.blur();\n\t\t}\n\n\t\ttouch = event.changedTouches[0];\n\n\t\t// Synthesise a click event, with an extra attribute so it can be tracked\n\t\tclickEvent = document.createEvent('MouseEvents');\n\t\tclickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\n\t\tclickEvent.forwardedTouchEvent = true;\n\t\ttargetElement.dispatchEvent(clickEvent);\n\t};\n\n\tFastClick.prototype.determineEventType = function(targetElement) {\n\n\t\t//Issue #159: Android Chrome Select Box does not open with a synthetic click event\n\t\tif (deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {\n\t\t\treturn 'mousedown';\n\t\t}\n\n\t\treturn 'click';\n\t};\n\n\n\t/**\n\t * @param {EventTarget|Element} targetElement\n\t */\n\tFastClick.prototype.focus = function(targetElement) {\n\t\tvar length;\n\n\t\t// Issue #160: on iOS 7, some input elements (e.g. date datetime month) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.\n\t\tif (deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time' && targetElement.type !== 'month') {\n\t\t\tlength = targetElement.value.length;\n\t\t\ttargetElement.setSelectionRange(length, length);\n\t\t} else {\n\t\t\ttargetElement.focus();\n\t\t}\n\t};\n\n\n\t/**\n\t * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.\n\t *\n\t * @param {EventTarget|Element} targetElement\n\t */\n\tFastClick.prototype.updateScrollParent = function(targetElement) {\n\t\tvar scrollParent, parentElement;\n\n\t\tscrollParent = targetElement.fastClickScrollParent;\n\n\t\t// Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the\n\t\t// target element was moved to another parent.\n\t\tif (!scrollParent || !scrollParent.contains(targetElement)) {\n\t\t\tparentElement = targetElement;\n\t\t\tdo {\n\t\t\t\tif (parentElement.scrollHeight > parentElement.offsetHeight) {\n\t\t\t\t\tscrollParent = parentElement;\n\t\t\t\t\ttargetElement.fastClickScrollParent = parentElement;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tparentElement = parentElement.parentElement;\n\t\t\t} while (parentElement);\n\t\t}\n\n\t\t// Always update the scroll top tracker if possible.\n\t\tif (scrollParent) {\n\t\t\tscrollParent.fastClickLastScrollTop = scrollParent.scrollTop;\n\t\t}\n\t};\n\n\n\t/**\n\t * @param {EventTarget} targetElement\n\t * @returns {Element|EventTarget}\n\t */\n\tFastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {\n\n\t\t// On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.\n\t\tif (eventTarget.nodeType === Node.TEXT_NODE) {\n\t\t\treturn eventTarget.parentNode;\n\t\t}\n\n\t\treturn eventTarget;\n\t};\n\n\n\t/**\n\t * On touch start, record the position and scroll offset.\n\t *\n\t * @param {Event} event\n\t * @returns {boolean}\n\t */\n\tFastClick.prototype.onTouchStart = function(event) {\n\t\tvar targetElement, touch, selection;\n\n\t\t// Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).\n\t\tif (event.targetTouches.length > 1) {\n\t\t\treturn true;\n\t\t}\n\n\t\ttargetElement = this.getTargetElementFromEventTarget(event.target);\n\t\ttouch = event.targetTouches[0];\n\n\t\tif (deviceIsIOS) {\n\n\t\t\t// Only trusted events will deselect text on iOS (issue #49)\n\t\t\tselection = window.getSelection();\n\t\t\tif (selection.rangeCount && !selection.isCollapsed) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (!deviceIsIOS4) {\n\n\t\t\t\t// Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):\n\t\t\t\t// when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched\n\t\t\t\t// with the same identifier as the touch event that previously triggered the click that triggered the alert.\n\t\t\t\t// Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an\n\t\t\t\t// immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.\n\t\t\t\t// Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,\n\t\t\t\t// which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,\n\t\t\t\t// random integers, it's safe to to continue if the identifier is 0 here.\n\t\t\t\tif (touch.identifier && touch.identifier === this.lastTouchIdentifier) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tthis.lastTouchIdentifier = touch.identifier;\n\n\t\t\t\t// If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:\n\t\t\t\t// 1) the user does a fling scroll on the scrollable layer\n\t\t\t\t// 2) the user stops the fling scroll with another tap\n\t\t\t\t// then the event.target of the last 'touchend' event will be the element that was under the user's finger\n\t\t\t\t// when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check\n\t\t\t\t// is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).\n\t\t\t\tthis.updateScrollParent(targetElement);\n\t\t\t}\n\t\t}\n\n\t\tthis.trackingClick = true;\n\t\tthis.trackingClickStart = event.timeStamp;\n\t\tthis.targetElement = targetElement;\n\n\t\tthis.touchStartX = touch.pageX;\n\t\tthis.touchStartY = touch.pageY;\n\n\t\t// Prevent phantom clicks on fast double-tap (issue #36)\n\t\tif ((event.timeStamp - this.lastClickTime) < this.tapDelay) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\treturn true;\n\t};\n\n\n\t/**\n\t * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.\n\t *\n\t * @param {Event} event\n\t * @returns {boolean}\n\t */\n\tFastClick.prototype.touchHasMoved = function(event) {\n\t\tvar touch = event.changedTouches[0], boundary = this.touchBoundary;\n\n\t\tif (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\n\t/**\n\t * Update the last position.\n\t *\n\t * @param {Event} event\n\t * @returns {boolean}\n\t */\n\tFastClick.prototype.onTouchMove = function(event) {\n\t\tif (!this.trackingClick) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If the touch has moved, cancel the click tracking\n\t\tif (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {\n\t\t\tthis.trackingClick = false;\n\t\t\tthis.targetElement = null;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\n\t/**\n\t * Attempt to find the labelled control for the given label element.\n\t *\n\t * @param {EventTarget|HTMLLabelElement} labelElement\n\t * @returns {Element|null}\n\t */\n\tFastClick.prototype.findControl = function(labelElement) {\n\n\t\t// Fast path for newer browsers supporting the HTML5 control attribute\n\t\tif (labelElement.control !== undefined) {\n\t\t\treturn labelElement.control;\n\t\t}\n\n\t\t// All browsers under test that support touch events also support the HTML5 htmlFor attribute\n\t\tif (labelElement.htmlFor) {\n\t\t\treturn document.getElementById(labelElement.htmlFor);\n\t\t}\n\n\t\t// If no for attribute exists, attempt to retrieve the first labellable descendant element\n\t\t// the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label\n\t\treturn labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');\n\t};\n\n\n\t/**\n\t * On touch end, determine whether to send a click event at once.\n\t *\n\t * @param {Event} event\n\t * @returns {boolean}\n\t */\n\tFastClick.prototype.onTouchEnd = function(event) {\n\t\tvar forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement;\n\n\t\tif (!this.trackingClick) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prevent phantom clicks on fast double-tap (issue #36)\n\t\tif ((event.timeStamp - this.lastClickTime) < this.tapDelay) {\n\t\t\tthis.cancelNextClick = true;\n\t\t\treturn true;\n\t\t}\n\n\t\tif ((event.timeStamp - this.trackingClickStart) > this.tapTimeout) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Reset to prevent wrong click cancel on input (issue #156).\n\t\tthis.cancelNextClick = false;\n\n\t\tthis.lastClickTime = event.timeStamp;\n\n\t\ttrackingClickStart = this.trackingClickStart;\n\t\tthis.trackingClick = false;\n\t\tthis.trackingClickStart = 0;\n\n\t\t// On some iOS devices, the targetElement supplied with the event is invalid if the layer\n\t\t// is performing a transition or scroll, and has to be re-detected manually. Note that\n\t\t// for this to function correctly, it must be called *after* the event target is checked!\n\t\t// See issue #57; also filed as rdar://13048589 .\n\t\tif (deviceIsIOSWithBadTarget) {\n\t\t\ttouch = event.changedTouches[0];\n\n\t\t\t// In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null\n\t\t\ttargetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;\n\t\t\ttargetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;\n\t\t}\n\n\t\ttargetTagName = targetElement.tagName.toLowerCase();\n\t\tif (targetTagName === 'label') {\n\t\t\tforElement = this.findControl(targetElement);\n\t\t\tif (forElement) {\n\t\t\t\tthis.focus(targetElement);\n\t\t\t\tif (deviceIsAndroid) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\ttargetElement = forElement;\n\t\t\t}\n\t\t} else if (this.needsFocus(targetElement)) {\n\n\t\t\t// Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.\n\t\t\t// Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).\n\t\t\tif ((event.timeStamp - trackingClickStart) > 100 || (deviceIsIOS && window.top !== window && targetTagName === 'input')) {\n\t\t\t\tthis.targetElement = null;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.focus(targetElement);\n\t\t\tthis.sendClick(targetElement, event);\n\n\t\t\t// Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.\n\t\t\t// Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)\n\t\t\tif (!deviceIsIOS || targetTagName !== 'select') {\n\t\t\t\tthis.targetElement = null;\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif (deviceIsIOS && !deviceIsIOS4) {\n\n\t\t\t// Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled\n\t\t\t// and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).\n\t\t\tscrollParent = targetElement.fastClickScrollParent;\n\t\t\tif (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Prevent the actual click from going though - unless the target node is marked as requiring\n\t\t// real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.\n\t\tif (!this.needsClick(targetElement)) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.sendClick(targetElement, event);\n\t\t}\n\n\t\treturn false;\n\t};\n\n\n\t/**\n\t * On touch cancel, stop tracking the click.\n\t *\n\t * @returns {void}\n\t */\n\tFastClick.prototype.onTouchCancel = function() {\n\t\tthis.trackingClick = false;\n\t\tthis.targetElement = null;\n\t};\n\n\n\t/**\n\t * Determine mouse events which should be permitted.\n\t *\n\t * @param {Event} event\n\t * @returns {boolean}\n\t */\n\tFastClick.prototype.onMouse = function(event) {\n\n\t\t// If a target element was never set (because a touch event was never fired) allow the event\n\t\tif (!this.targetElement) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (event.forwardedTouchEvent) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Programmatically generated events targeting a specific element should be permitted\n\t\tif (!event.cancelable) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Derive and check the target element to see whether the mouse event needs to be permitted;\n\t\t// unless explicitly enabled, prevent non-touch click events from triggering actions,\n\t\t// to prevent ghost/doubleclicks.\n\t\tif (!this.needsClick(this.targetElement) || this.cancelNextClick) {\n\n\t\t\t// Prevent any user-added listeners declared on FastClick element from being fired.\n\t\t\tif (event.stopImmediatePropagation) {\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t} else {\n\n\t\t\t\t// Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)\n\t\t\t\tevent.propagationStopped = true;\n\t\t\t}\n\n\t\t\t// Cancel the event\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the mouse event is permitted, return true for the action to go through.\n\t\treturn true;\n\t};\n\n\n\t/**\n\t * On actual clicks, determine whether this is a touch-generated click, a click action occurring\n\t * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or\n\t * an actual click which should be permitted.\n\t *\n\t * @param {Event} event\n\t * @returns {boolean}\n\t */\n\tFastClick.prototype.onClick = function(event) {\n\t\tvar permitted;\n\n\t\t// It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.\n\t\tif (this.trackingClick) {\n\t\t\tthis.targetElement = null;\n\t\t\tthis.trackingClick = false;\n\t\t\treturn true;\n\t\t}\n\n\t\t// Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.\n\t\tif (event.target.type === 'submit' && event.detail === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\tpermitted = this.onMouse(event);\n\n\t\t// Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.\n\t\tif (!permitted) {\n\t\t\tthis.targetElement = null;\n\t\t}\n\n\t\t// If clicks are permitted, return true for the action to go through.\n\t\treturn permitted;\n\t};\n\n\n\t/**\n\t * Remove all FastClick's event listeners.\n\t *\n\t * @returns {void}\n\t */\n\tFastClick.prototype.destroy = function() {\n\t\tvar layer = this.layer;\n\n\t\tif (deviceIsAndroid) {\n\t\t\tlayer.removeEventListener('mouseover', this.onMouse, true);\n\t\t\tlayer.removeEventListener('mousedown', this.onMouse, true);\n\t\t\tlayer.removeEventListener('mouseup', this.onMouse, true);\n\t\t}\n\n\t\tlayer.removeEventListener('click', this.onClick, true);\n\t\tlayer.removeEventListener('touchstart', this.onTouchStart, false);\n\t\tlayer.removeEventListener('touchmove', this.onTouchMove, false);\n\t\tlayer.removeEventListener('touchend', this.onTouchEnd, false);\n\t\tlayer.removeEventListener('touchcancel', this.onTouchCancel, false);\n\t};\n\n\n\t/**\n\t * Check whether FastClick is needed.\n\t *\n\t * @param {Element} layer The layer to listen on\n\t */\n\tFastClick.notNeeded = function(layer) {\n\t\tvar metaViewport;\n\t\tvar chromeVersion;\n\t\tvar blackberryVersion;\n\t\tvar firefoxVersion;\n\n\t\t// Devices that don't support touch don't need FastClick\n\t\tif (typeof window.ontouchstart === 'undefined') {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Chrome version - zero for other browsers\n\t\tchromeVersion = +(/Chrome\\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];\n\n\t\tif (chromeVersion) {\n\n\t\t\tif (deviceIsAndroid) {\n\t\t\t\tmetaViewport = document.querySelector('meta[name=viewport]');\n\n\t\t\t\tif (metaViewport) {\n\t\t\t\t\t// Chrome on Android with user-scalable=\"no\" doesn't need FastClick (issue #89)\n\t\t\t\t\tif (metaViewport.content.indexOf('user-scalable=no') !== -1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t// Chrome 32 and above with width=device-width or less don't need FastClick\n\t\t\t\t\tif (chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Chrome desktop doesn't need FastClick (issue #15)\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (deviceIsBlackBerry10) {\n\t\t\tblackberryVersion = navigator.userAgent.match(/Version\\/([0-9]*)\\.([0-9]*)/);\n\n\t\t\t// BlackBerry 10.3+ does not require Fastclick library.\n\t\t\t// https://github.com/ftlabs/fastclick/issues/251\n\t\t\tif (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) {\n\t\t\t\tmetaViewport = document.querySelector('meta[name=viewport]');\n\n\t\t\t\tif (metaViewport) {\n\t\t\t\t\t// user-scalable=no eliminates click delay.\n\t\t\t\t\tif (metaViewport.content.indexOf('user-scalable=no') !== -1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t// width=device-width (or less than device-width) eliminates click delay.\n\t\t\t\t\tif (document.documentElement.scrollWidth <= window.outerWidth) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// IE10 with -ms-touch-action: none or manipulation, which disables double-tap-to-zoom (issue #97)\n\t\tif (layer.style.msTouchAction === 'none' || layer.style.touchAction === 'manipulation') {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Firefox version - zero for other browsers\n\t\tfirefoxVersion = +(/Firefox\\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];\n\n\t\tif (firefoxVersion >= 27) {\n\t\t\t// Firefox 27+ does not have tap delay if the content is not zoomable - https://bugzilla.mozilla.org/show_bug.cgi?id=922896\n\n\t\t\tmetaViewport = document.querySelector('meta[name=viewport]');\n\t\t\tif (metaViewport && (metaViewport.content.indexOf('user-scalable=no') !== -1 || document.documentElement.scrollWidth <= window.outerWidth)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// IE11: prefixed -ms-touch-action is no longer supported and it's recomended to use non-prefixed version\n\t\t// http://msdn.microsoft.com/en-us/library/windows/apps/Hh767313.aspx\n\t\tif (layer.style.touchAction === 'none' || layer.style.touchAction === 'manipulation') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\n\t/**\n\t * Factory method for creating a FastClick object\n\t *\n\t * @param {Element} layer The layer to listen on\n\t * @param {Object} [options={}] The options to override the defaults\n\t */\n\tFastClick.attach = function(layer, options) {\n\t\treturn new FastClick(layer, options);\n\t};\n\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine(function() {\n\t\t\treturn FastClick;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = FastClick.attach;\n\t\tmodule.exports.FastClick = FastClick;\n\t} else {\n\t\twindow.FastClick = FastClick;\n\t}\n}());\n","/**\r\n * A module for handling sidebars in Decode.\r\n * @module DecodeSidebar\r\n * @version 1.0.0\r\n */\r\nvar DecodeSidebar = ( function () {\r\n\t'use strict';\r\n\t\r\n\t/**\r\n\t * Instantiate DecodeSidebar.\r\n\t *\r\n\t * @private\r\n\t * @constructor\r\n\t * @param {Object} elements to listen on and toggle body class when clicked.\r\n\t * @param {String} name of the class to be added to body when sidebar is active. Defaults to 'sidebar-visible'.\r\n\t */\r\n\tfunction DecodeSidebar( elements, visibleClass ) {\r\n\t\tvisibleClass = visibleClass || 'sidebar-visible';\r\n\t\t\r\n\t\t// Loop through the elements.\r\n\t\tvar i;\r\n\t\tfor ( i = 0; i < elements.length; ++i ) {\r\n\t\t\tvar element = elements[i],\r\n\t\t\t    currentElement = document.getElementById( element );\r\n\t\t\t\r\n\t\t\t// Check to see if the element exists before proceeding\r\n\t\t\tif ( currentElement ) {\r\n\t\t\t\t\r\n\t\t\t\t// If it's a modern browser:\r\n\t\t\t\tif ( document.addEventListener ) {\r\n\t\t\t\t\tcurrentElement.addEventListener( 'click', toggleClass( document.body, visibleClass ), false );\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// If it's IE 8 or some crap like that:\r\n\t\t\t\telse if ( document.attachEvent ) {\r\n\t\t\t\t\tcurrentElement.attachEvent( 'onclick', toggleClass( document.body, visibleClass ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Just a nice function to toggle classes. \r\n\t * Could I use new JavaScript features? Yes. Am I going to? No, keeping at least IE 9 support for this feature.\r\n\t *\r\n\t * @function toggleClass\r\n\t * @private\r\n\t */\r\n\tfunction toggleClass( element, className ) {\r\n\t\treturn function () {\r\n\t\t\tif ( !element || !className ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar classString = element.className, nameIndex = classString.indexOf( className );\r\n\t\t\tif ( nameIndex === -1 ) {\r\n\t\t\t\tclassString += ' ' + className;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\telse {\r\n\t\t\t\tclassString = classString.substr( 0, nameIndex ) + classString.substr( nameIndex + className.length );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\telement.className = classString;\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Factory method for setting up DecodeSidebar.\r\n\t *\r\n\t * @param {Object} elements to listen on and toggle body class when clicked.\r\n\t * @param {String} name of the class to be added to body when sidebar is active. Defaults to 'sidebar-visible'.\r\n\t */\r\n\tfunction init( elements, visibleClass ) {\r\n\t\treturn new DecodeSidebar( elements, visibleClass );\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tinit: init\r\n\t};\r\n} )();","/**\r\n * A module for handling dropdown menus in Decode.\r\n * @module DecodeDropdown\r\n * @version 1.0.0\r\n */\r\nvar DecodeDropdown = ( function () {\r\n\t'use strict';\r\n\t\r\n\t/**\r\n\t * Instantiate DecodeDropdown.\r\n\t *\r\n\t * @private\r\n\t * @constructor\r\n\t * @param {Object} Parent Elements that will have the class appended.\r\n\t * @param {Object} Child Elements. If anything other than the child element is tapped, the Parent Element will have its active class removed.\r\n\t * @param {String} Name of the class to be added to Parent Elements when they are active. Defaults to 'open'.\r\n\t */\r\n\tfunction DecodeDropdown( parentElements, childElements, activeDropdownClass ) {\r\n\t\tactiveDropdownClass = activeDropdownClass || 'open';\r\n\t\r\n\t\t// Loop through the parentElements.\r\n\t\tvar i;\r\n\t\tfor ( i = 0; i < parentElements.length; i++ ) {\r\n\t\t\tvar element = parentElements[i];\r\n\t\t\t\r\n\t\t\tnew OpenMenus( element, activeDropdownClass );\r\n\t\t\t\r\n\t\t}\r\n\t\t\t\r\n\t\t// Alias all the names for the matches() method.\r\n\t\tvar matches;\r\n\t\t\r\n\t\t( function( doc ) {\r\n\t\t\tmatches = \r\n\t\t\t\tdoc.matches ||                // Latest Satandard\r\n\t\t\t\tdoc.matchesSelector ||        // Old Standard\r\n\t\t\t\tdoc.webkitMatchesSelector ||  // Safari 5+\r\n\t\t\t\tdoc.mozMatchesSelector ||     // Firefox 3.6+\r\n\t\t\t\tdoc.oMatchesSelector ||       // Opera 15+, 11.5+\r\n\t\t\t\tdoc.msMatchesSelector;        // IE 9+\r\n\t\t} )( document.documentElement );\r\n\t\t\r\n\t\t// Dismiss dropdowns after a tap on any non-menu element\r\n\t\tif ( ! ( document.querySelector( '.' + activeDropdownClass ) ) ) {\r\n\t\t\tdocument.addEventListener( 'click', function( event ) {\r\n\t\t\t\t\r\n\t\t\t\t// Loop through the childElements and output a string with a CSS selector for the open items.\r\n\t\t\t\tvar i;\r\n\t\t\t\tvar openItemSelector = '';\r\n\t\t\t\tfor ( i = 0; i < childElements.length; i++ ) {\r\n\t\t\t\t\tvar element = childElements[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Only add a comma if this is the second or greater time through the loop.\r\n\t\t\t\t\tif ( i > 0 ) {\r\n\t\t\t\t\t\topenItemSelector = openItemSelector + ', .' + element + '.' + 'open' + ' *';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Otherwise, don't add a comma.\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenItemSelector = openItemSelector + '.' + element + '.' + 'open' + ' *';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif ( ! ( matches.call( event.target, openItemSelector ) ) ) {\r\n\t\t\t\t\tnew CloseMenus( activeDropdownClass );\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}, false );\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Handles opening menus and closing currently open menus when a new menu is selected.\r\n\t *\r\n\t * @function OpenMenus\r\n\t * @private\r\n\t */\r\n\tfunction OpenMenus( element, activeDropdownClass ) {\r\n\t\t[].forEach.call( document.querySelectorAll( '.' + element ), function( element ) {\r\n\t\t\telement.firstChild.addEventListener( 'click', function( event ) {\r\n\t\t\t\t\r\n\t\t\t\t// Close other dropdowns unless they are a parent.\r\n\t\t\t\tif ( document.querySelector( '.' + activeDropdownClass ) && ! ( element.parentElement.parentElement.classList.contains( activeDropdownClass ) ) && ! ( element.classList.contains( activeDropdownClass ) ) ) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tnew CloseMenus( activeDropdownClass );\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Open the dropdown and don't open the link.\r\n\t\t\t\tif ( ! ( element.classList.contains( activeDropdownClass ) ) ) {\r\n\t\t\t\t\telement.classList.toggle( activeDropdownClass );\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Anything else and the link will open as normal.\r\n\t\t\t\t\r\n\t\t\t}, false );\r\n\t\t} );\r\n\t}\r\n\t\r\n\t/**\r\n\t * Iterates over each element with the active dropdown class and removes it.\r\n\t *\r\n\t * @function CloseMenus\r\n\t * @private\r\n\t */\r\n\tfunction CloseMenus( activeDropdownClass ) {\r\n\t\t[].forEach.call( document.querySelectorAll('.' + activeDropdownClass ), function( element ) {\r\n\t\t\telement.classList.remove(activeDropdownClass);\r\n\t\t} );\r\n\t}\r\n\t\r\n\t/**\r\n\t * Factory method for setting up DecodeDropdown.\r\n\t *\r\n\t * @param {Object} Parent Elements that will have the class appended.\r\n\t * @param {Object} Child Elements. If anything other than the child element is tapped, the Parent Element will have its active class removed.\r\n\t * @param {String} Name of the class to be added to Parent Elements when they are active. Defaults to 'open'.\r\n\t */\r\n\tfunction init( parentElements, childElements, activeDropdownClass ) {\r\n\t\treturn new DecodeDropdown( parentElements, childElements, activeDropdownClass );\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tinit: init\r\n\t};\r\n} )();","( function () {\r\n\t'use strict';\r\n\r\n\tvar decode = {\r\n\t\t\r\n\t\t// Init functions\r\n\t\tinit: function() {\r\n\t\t\tthis.FastClick();\r\n\t\t\tthis.DecodeSidebar();\r\n\t\t\tif ( Modernizr.touch ) {\r\n\t\t\t\tthis.DecodeDropdown();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Initialize FastClick (see `scripts/src/fastclick.js`)\r\n\t\tFastClick: function() {\r\n\t\t\twindow.addEventListener( 'load', function() {\r\n\t\t\t\tFastClick.attach(document.body);\r\n\t\t\t}, false );\r\n\t\t},\r\n\t\t\r\n\t\t// Initialize DecodeSidebar (see `scripts/src/sidebar.js`)\r\n\t\tDecodeSidebar: function() {\r\n\t\t\tDecodeSidebar.init( ['sidebar-link', 'sidebar-top'] );\r\n\t\t},\r\n\t\t\r\n\t\t// Initialize DecodeDropdown (see `scripts/src/dropdown.js`)\r\n\t\tDecodeDropdown: function() {\r\n\t\t\tDecodeDropdown.init( ['menu-item-has-children', 'page_item_has_children'], ['menu-item', 'page_item'] );\r\n\t\t}\r\n\t\t\r\n\t};\r\n\t\r\n\tdecode.init();\r\n\t\r\n} )();"],"sourceRoot":"/source/"}